version: '3.8'

services:
  db:
    build: ./database
    container_name: postgres_db
    restart: always
    env_file: .env
    ports:
      - "5432:5432"
    networks:
      - app_network
    volumes:
      - pgdata:/var/lib/postgresql/data

  backend:
    build: ./backend
    container_name: flask_app
    restart: always
    depends_on:
      - db
      - mailhog
    env_file: .env
    ports:
      - "5001:5000"
    networks:
      - app_network
    volumes:
      - .:/backend

  frontend:
    build: ./react-ui 
    container_name: react-ui
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "3000:3000"
    networks:
      - app_network

  nginx:
    image: nginx:latest
    container_name: nginx-server
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx
    depends_on:
      - backend
      - frontend
    networks:
      - app_network

  mailhog:   
    image: mailhog/mailhog
    container_name: mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"   # SMTP server
      - "8025:8025"   # Web UI
    networks:
      - app_network

volumes:
  pgdata:

networks:
  app_network:
    driver: bridge